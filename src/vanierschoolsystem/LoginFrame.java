/*
 * The MIT License
 *
 * Copyright 2021 Chilka Castro .
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package vanierschoolsystem;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.Serializable;
import javax.swing.ImageIcon;

/**
 * A Login Frame Class
 * @author Chilka Castro
 */
public class LoginFrame extends javax.swing.JFrame implements Serializable{

    /**
     * LoginFrame constructor
     */
    public LoginFrame() {
        initComponents();
        ImageIcon scoreImg = new ImageIcon("imgs\\score.png");
        imgL.setIcon(scoreImg);
        VanierSchoolSystem.initData();                                           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleL = new javax.swing.JLabel();
        loginP = new javax.swing.JPanel();
        idL = new javax.swing.JLabel();
        passwordTF = new javax.swing.JTextField();
        passwordL = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        submitB = new javax.swing.JButton();
        loginMsgL = new javax.swing.JLabel();
        imgL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Frame");

        titleL.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        titleL.setForeground(new java.awt.Color(0, 0, 0));
        titleL.setText("Vanier Score System");

        loginP.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        idL.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        idL.setForeground(new java.awt.Color(0, 0, 0));
        idL.setText("ID :");

        passwordTF.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        passwordTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTFKeyReleased(evt);
            }
        });

        passwordL.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        passwordL.setForeground(new java.awt.Color(0, 0, 0));
        passwordL.setText("Password : ");

        idTF.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N

        submitB.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        submitB.setForeground(new java.awt.Color(0, 0, 0));
        submitB.setText("Submit");
        submitB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPLayout = new javax.swing.GroupLayout(loginP);
        loginP.setLayout(loginPLayout);
        loginPLayout.setHorizontalGroup(
            loginPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(loginMsgL, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(submitB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(loginPLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(loginPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(loginPLayout.createSequentialGroup()
                        .addComponent(passwordL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginPLayout.createSequentialGroup()
                        .addComponent(idL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        loginPLayout.setVerticalGroup(
            loginPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(loginPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idL)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(loginPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordL)
                    .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(loginPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(submitB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(45, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loginMsgL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(loginP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(imgL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(titleL, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(titleL, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imgL, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(loginP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Opens another frame when the userID is correct after clicking the submit 
     * button
     * @param evt the event
     */
    private void submitBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBActionPerformed
        loginUser();
    }//GEN-LAST:event_submitBActionPerformed

    /**
     * When enter key is pressed and the userID and password text field
     * are not empty, user can activate the login button witH just the ENTER key
     * @param evt the event 
     */
    private void passwordTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTFKeyReleased
        if (idTF.getText().length() > 0 && passwordTF.getText().length() > 0) 
            if (evt.getKeyCode() == KeyEvent.VK_ENTER )
                loginUser();   
    }//GEN-LAST:event_passwordTFKeyReleased

    /**
     * When the login is used, it will open a new frame depending on what
     * type of user : student, admin, and teacher.
     */
    public void loginUser() {
        String inputId = idTF.getText();
        String password = passwordTF.getText();
        boolean userValid = false;
        
        try {
            for (User existUser : VanierSchoolSystem.users) {
                if (existUser.userId.equals(inputId) && existUser.password.equals(password)) {
                    char type = Character.toLowerCase(existUser.userId.charAt(0));
                    if (type == 's') // Student
                        if (existUser instanceof Student) {
                            Student student = (Student) existUser;
                            new StudentFrame(student).setVisible(true);
                        }
                    
                    if (type == 't')  // Teacher
                        if (existUser instanceof Teacher) {
                            Teacher teacher = (Teacher) existUser;
                            new TeacherFrame(teacher).setVisible(true);
                        }
                    
                    if (type == 'a') // Admin
                        if (existUser instanceof Admin) {
                            Admin admin = (Admin) existUser;
                            new AdminFrame(admin).setVisible(true);
                        }
                    userValid = true;
                    this.dispose();
                }
            }    
        }   
        catch (NullPointerException e) {
            System.exit(0);
        }
            if (!userValid) {
                loginMsgL.setForeground(Color.RED);
                loginMsgL.setText("Your id or password is not correct");
            }
    }
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
             
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel idL;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel imgL;
    private javax.swing.JLabel loginMsgL;
    private javax.swing.JPanel loginP;
    private javax.swing.JLabel passwordL;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JButton submitB;
    private javax.swing.JLabel titleL;
    // End of variables declaration//GEN-END:variables
}
