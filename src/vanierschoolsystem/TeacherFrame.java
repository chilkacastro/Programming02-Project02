/*
 * The MIT License
 *
 * Copyright 2021 Chilka Castro .
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package vanierschoolsystem;

import java.awt.Color;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Serializable;

/**
 * A TeacherFrame class
 * @author Chilka Castro
 */
public class TeacherFrame extends javax.swing.JFrame implements Serializable {
    private Teacher teacher;
    
    /**
     * Creates new form TeacherFrame
     */
    public TeacherFrame(Teacher teacher) {
        initComponents();
        this.teacher = teacher;
        welcomeL.setText(String.format("Welcome, %s", teacher.fname));
        VanierSchoolSystem.initData();
        displayTA.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        welcomeL = new javax.swing.JLabel();
        addCourseL = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        courseL = new javax.swing.JLabel();
        studentL = new javax.swing.JLabel();
        scoreL = new javax.swing.JLabel();
        courseTF = new javax.swing.JTextField();
        scoreTF = new javax.swing.JTextField();
        studentTF = new javax.swing.JTextField();
        addB = new javax.swing.JButton();
        addStatusMsgL = new javax.swing.JLabel();
        displayP = new javax.swing.JScrollPane();
        displayTA = new javax.swing.JTextArea();
        displayB = new javax.swing.JButton();
        exportB = new javax.swing.JButton();
        displayWindowL = new javax.swing.JLabel();
        exportMsgL = new javax.swing.JLabel();
        logOutB = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teacher");

        welcomeL.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        welcomeL.setForeground(new java.awt.Color(0, 0, 102));

        addCourseL.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        addCourseL.setForeground(new java.awt.Color(0, 0, 0));
        addCourseL.setText("Add a course ");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        courseL.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        courseL.setForeground(new java.awt.Color(0, 0, 0));
        courseL.setText("Course :");

        studentL.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        studentL.setForeground(new java.awt.Color(0, 0, 0));
        studentL.setText("Student :");

        scoreL.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        scoreL.setForeground(new java.awt.Color(0, 0, 0));
        scoreL.setText("Score :");

        addB.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        addB.setForeground(new java.awt.Color(0, 0, 0));
        addB.setText("Add");
        addB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBActionPerformed(evt);
            }
        });

        addStatusMsgL.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        addStatusMsgL.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addB)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(courseL)
                                .addComponent(scoreL)
                                .addComponent(studentL))
                            .addGap(58, 58, 58)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(studentTF, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scoreTF, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(courseTF, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(addStatusMsgL, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseL)
                    .addComponent(courseTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentL)
                    .addComponent(studentTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreL)
                    .addComponent(scoreTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(addB)
                .addGap(18, 18, 18)
                .addComponent(addStatusMsgL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        displayTA.setColumns(20);
        displayTA.setRows(5);
        displayP.setViewportView(displayTA);

        displayB.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        displayB.setForeground(new java.awt.Color(0, 0, 0));
        displayB.setText("Display");
        displayB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBActionPerformed(evt);
            }
        });

        exportB.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        exportB.setForeground(new java.awt.Color(0, 0, 0));
        exportB.setText("Export");
        exportB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBActionPerformed(evt);
            }
        });

        displayWindowL.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        displayWindowL.setForeground(new java.awt.Color(0, 0, 0));
        displayWindowL.setText("Display");

        logOutB.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        logOutB.setForeground(new java.awt.Color(0, 0, 0));
        logOutB.setText("Log Out");
        logOutB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(welcomeL, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseL)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayWindowL)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(logOutB)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(displayP, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(displayB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(exportB)))))))
                .addGap(59, 59, 59))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exportMsgL, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(welcomeL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutB))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseL)
                    .addComponent(displayWindowL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(displayP, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displayB)
                            .addComponent(exportB)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(exportMsgL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Adds a score for a specific student in a specific course
     * @param evt the event action
     */
    private void addBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBActionPerformed
        String courseName = courseTF.getText();
        String studentFname = studentTF.getText();
        int idx = 0;
        boolean validName = false;
        Double grade = null;
        try {
            grade = Double.parseDouble(String.format("%s", scoreTF.getText()));
        }
        catch (NumberFormatException e){
        }
        // Check the courses at Vanier School System
        for (Course course : VanierSchoolSystem.courses) {
            if (course.getCourseName().equalsIgnoreCase(courseName)) {
                // Check if teacher exist
                if (!teacher.userId.equals(course.getTeacher().userId)) {
                    addStatusMsgL.setForeground(Color.RED);
                    addStatusMsgL.setText("You do not teach this course");
                }
                if (teacher.userId.equals(course.getTeacher().userId)) {
                    for (Student student : course.getRegsStudents()) 
                        if (student.fname.equalsIgnoreCase(studentFname)) {
                            try {
                                idx = course.getRegsStudents().indexOf(student);
                                course.getFinalScores().set(idx, grade);
                            }
                            catch (ArrayIndexOutOfBoundsException e) {
                                course.getFinalScores().add(idx, grade);
                            }
                            addStatusMsgL.setForeground(Color.GREEN);
                            addStatusMsgL.setText("The grade has been added successfully");
                            validName = true;
                            VanierSchoolSystem.serializeAllData();
                            break;
                        }
                    }
                    if (!validName) {
                        addStatusMsgL.setForeground(Color.RED);
                        addStatusMsgL.setText("The student has not registered this course");
                }
            }
        } 
    }//GEN-LAST:event_addBActionPerformed

    /**
     * Displays the grades of all students for a specific course
     * @param evt the event
     */
    private void displayBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBActionPerformed
        String str = "";
        String courseName = courseTF.getText();
        
        for (Course course : VanierSchoolSystem.courses) {
            if (course.getCourseName().equalsIgnoreCase(courseName))
                for (int i = 0; i < course.getRegsStudents().size(); i++) {
                    str += String.format("%s :", course.getRegsStudents().get(i).fname);
                    try {
                        str += String.format("%.1f\n", course.getFinalScores().get(i));
                    }
                    catch (IndexOutOfBoundsException e) {
                        str += String.format("%s\n", "null"); 
                    }
                }
        }
        displayTA.setText(str);
    }//GEN-LAST:event_displayBActionPerformed
     
    /**
     * Exports the grades to a .csv file when the export button is used
     * @param evt the event
     */
    private void exportBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBActionPerformed
        String inputCourseName = courseTF.getText();
        // Step 1 : Indicate the path
        if (inputCourseName.length() > 0) {
            String path = String.format("data\\%s.csv", inputCourseName);
        
            // Step 2 : Create a file object
            File file = new File(path);
            // Create a String
            String str = "";
            // Step 3 : Create a FileWriter object with try with resources
            try (FileWriter fw = new FileWriter(file, true)) {
                // Step 4 : Create Header
                str += String.format("%s,%s,%s\n", "Student ID", "Student Name", "Final Grade");
                // Step 5 : Create the body
                for (Course course : VanierSchoolSystem.courses) 
                    if (course.getCourseName().equalsIgnoreCase(inputCourseName)) 
                        for (Student student : course.getRegsStudents()) {
                            // Step 6 : Get index of each student
                            try {
                                int studentGradeIdx = course.getRegsStudents().indexOf(student);
                                // Step 7 : Get id, name and grade of student
                                str += String.format("%s,%s %s,%f\n", student.userId, 
                                        student.fname, student.lname, 
                                        course.getFinalScores().get(studentGradeIdx));
                            } 
                            catch (IndexOutOfBoundsException e) {
                                str += String.format("%s,%s %s,%s", student.userId, 
                                        student.fname, student.lname, "null");
                                
                            }
                        }
                fw.write(str);
                exportMsgL.setForeground(Color.GREEN);
                exportMsgL.setText("Exported grades successfully");
            }
            catch (IOException e) {
                exportMsgL.setText("Export grades failed");  
            } 
        }
        else {
            exportMsgL.setForeground(Color.RED);
            exportMsgL.setText("Export grades failed");
        }  
    }//GEN-LAST:event_exportBActionPerformed

    /**
     * When the logout button is used, a new login frame is created
     * and the current teacher frame will be disposed
     * @param evt the event
     */
    private void logOutBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBActionPerformed
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logOutBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addB;
    private javax.swing.JLabel addCourseL;
    private javax.swing.JLabel addStatusMsgL;
    private javax.swing.JLabel courseL;
    private javax.swing.JTextField courseTF;
    private javax.swing.JButton displayB;
    private javax.swing.JScrollPane displayP;
    private javax.swing.JTextArea displayTA;
    private javax.swing.JLabel displayWindowL;
    private javax.swing.JButton exportB;
    private javax.swing.JLabel exportMsgL;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logOutB;
    private javax.swing.JLabel scoreL;
    private javax.swing.JTextField scoreTF;
    private javax.swing.JLabel studentL;
    private javax.swing.JTextField studentTF;
    private javax.swing.JLabel welcomeL;
    // End of variables declaration//GEN-END:variables
}
